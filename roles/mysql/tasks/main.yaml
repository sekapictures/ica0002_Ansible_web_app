- name: Install  mysql packages
  ansible.builtin.apt:
    name: 
      - mysql-server
      - python3-pymysql
    state: latest

- name: Place mysql configuration
  ansible.builtin.template:
    src: override.cnf
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart mysql service

- name: Ensure mysql is started
  ansible.builtin.service:
    name: mysql
    enabled: yes
    state: started 

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
  no_log: true

- name: MySQL user for replication
  community.mysql.mysql_user:
    name: "{{ mysql_replication_user }}"
    password: "{{ mysql_replication_pass }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
  no_log: true

- name: MySQL replica read only mode ON
  community.mysql.mysql_variables:
    variable: read_only
    value: 'ON'
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: inventory_hostname != mysql_host
  notify:
    - Reset MySQL source
    - Reset MySQL replica
    - Restart uWSGI service

- name: Reset MySQL host
  community.mysql.mysql_variables:
    variable: read_only
    value: 'OFF'
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: inventory_hostname == mysql_host
  notify:
    - Reset MySQL source
    - Reset MySQL replica
    - Restart uWSGI service
