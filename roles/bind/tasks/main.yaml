- name: Install bind9
  ansible.builtin.apt:
    name: 
      - bind9
      - python3-dnspython
      - bind9-utils
    state: latest

- name: Place bind9 configuration
  ansible.builtin.template:
    src: named.conf.options.j2
    dest: /etc/bind/named.conf.options
    mode: '0766'
    force: yes
  notify: 
    - Restart bind9 service
  register: bind9_result
  no_log: true

- name: Stop systemd-resolved
  service: 
    name: systemd-resolved
    state: stopped
    enabled: no 
  register: systemd_resolved_result

- name: Delete resolv.conf link
  shell: sudo rm /etc/resolv.conf
  when: systemd_resolved_result.changed

- name: Place /etc/resolv.conf
  ansible.builtin.template:
    src: resolv.conf
    dest: /etc/resolv.conf
    force: yes
    mode: '0766'
  # when: systemd_resolved_result.changed

- name: Place /var/cache/bind/
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /var/cache/bind/
    mode: '0766'
    force: no
  notify:
    - Reload database
    - Restart bind9 service
  when: inventory_hostname in groups['dns_master']
  loop: 
    - "{{ db_name }}"
    - db.reverse

- name: Place /etc/bind/named.conf.local
  ansible.builtin.template:
    src: named.conf.local.j2
    dest: /etc/bind/named.conf.local
    mode: '0766'
    force: yes
  notify: 
    - Restart bind9 service

- name: Reload database
  shell: sudo rndc reload
  when: 
    - bind9_result.changed
    - inventory_hostname in groups['dns_master']
  
- name: Set CNAME records
  community.general.nsupdate:
    key_name: "dns_update_key"
    key_secret: "{{ dns_update_key }}"
    key_algorithm: "hmac-sha256"
    server: "localhost"
    zone: "{{ startup_name }}"
    record: "{{ item.key }}"
    type: "CNAME"
    value: "{{ item.value }}"
  loop: "{{ dns_cname_records | dict2items }}"
  when: inventory_hostname in groups['dns_master']
  notify: 
    - Place /var/cache/bind/db.gleppy
    - Place /var/cache/bind/db.reverse

- name: Set A records
  community.general.nsupdate:
    key_name: "dns_update_key"
    key_secret: "{{ dns_update_key }}"
    key_algorithm: "hmac-sha256"
    server: "localhost"
    zone: "{{ startup_name }}"
    record: "{{ item.key }}"
    type: "A"
    value: "{{ item.value }}"
  loop: "{{ dns_a_records | dict2items }}"
  when: inventory_hostname in groups['dns_master']
  notify: 
    - Place /var/cache/bind/db.gleppy
    - Place /var/cache/bind/db.reverse

# - name: Restart bind9 service
#   ansible.builtin.service:
#     name: bind9
#     state: restarted
#   when: 
#     - bind9_result.changed
#     - inventory_hostname in groups['dns_master']

- name: Ensure bind9 is started
  ansible.builtin.service:
    name: bind9
    enabled: yes
    state: started
